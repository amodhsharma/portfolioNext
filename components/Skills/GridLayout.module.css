.outerWrapper{
  height: 100vh;
  justify-content: center;
  margin-top: 2rem;
  /* centers vertically  */
}

.gridContainer {
  display: grid;

  align-items: center;
  justify-items: center;
  /* align items and justify items cneter the elements centrally in horizontal and vertical positons  */
  
  grid-template-columns: repeat(5, 1fr); /* 5 columns, flexible width using 1fr */
  grid-template-rows: repeat(4, 1fr); /* 3 columns, flexible width using 1fractional unit */
  
  /* height: 60vh;  Grid height fills the viewport 
  width: 50vw;
  max-width: 100vw; 
  we dont need a width as it will automatically calculate, if we put a width, it will sometimes get out of the defined boundaries 
 removing height, width and max width, amkes it scale evenly, having even one of these components is an issue for sesponsivemeness. */ 
}
.gridItem {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 1vw;
  /* a padding in terms of pixel would make the images shrink when we scale down a lot  */

  border: 1px solid rgba(202, 210, 197, 0.5);
  background-color:  rgba(202, 210, 197, 0.15);
  /* last number 0.25 represents opacity  */
  border-radius: 1vw;
  /* important for cases where we scale down */
  
  position: relative;
  
  width: calc(100% - 0.5vw);
  height: calc(100% - 0.5vw);
  aspect-ratio: 1/1;
  /* important for it to maintain 1:1 ratio */

  box-sizing: border-box;
}

.imageWrapper {
  width: 99%; /* Image wrapper scales within the grid item */
  height: 99%; /* Keep height the same */
  position: relative;
}
.imageWrapper img {
  width: 100%;
  height: 100%; /* Ensures images fill the wrapper without distortion */
}

.gridItem:hover {
  background-color: rgba(202, 210, 197, 0.25); /* Slightly darker on hover */
}

.imageLabel {
  position: absolute;
  bottom: 10px; /* Adjust as needed */
  left: 50%;
  transform: translateX(-50%);
  font-size: calc(1vw + 1vh);
  color: #000;
  background-color: rgba(255, 255, 255, 0.7); /* Slightly translucent background */
  padding: 5px 10px;
  border-radius: 5px;
  opacity: 0;
  transition: opacity 0.3s ease;
}

.gridItem:hover .imageLabel {
  opacity: 1; /* Show the label on hover */
}